;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; This is the base configuration file.  Remember all of these settings can be overridden in the code by calling:  ;;;
;;;	HeimdallGI::Configuraiton::Set("key", value);                                                               ;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Variables ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;@lbl This configuration file supports variable replacements, below is the syntax

;@name (1) Single Variable

;@ex	${SomeVariable}
;@par	where the SomeVariable is in the key/value pairs passed to HeimdallGI::Configuraiton::Get()

;@name (2) Multiple Variables if undefined
;@par	This is useful if you are testing the framework outside of apache (i.e. CLI) and do not want to fake all of the env variables
;@ex	${DOCUMENT_ROOT | HGI_ROOT}
;@par	This looks for DOCUMENT_ROOT first and if it's not defined or empty, it'll use HGI_ROOT instead


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Database Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Database]
dataBase          = cdndepo_ddns                                   ; Database name
dataBasePath      =                                                ; For SQLite databases
serverHost        = odin.cdndepo.com                               ; Database Server
serverPort        = 5432                                           ; Database Server Port
sqlDriver         = QPSQL                                          ; Database Driver, remember to compile them wherever you compile this framework
userName          = cdndepo_dba                                    ; Database Username
userPass          = Fj8*Qm1597tmb!!!#                              ; Database Password

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Environment Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Environment]
showDebug         = 1                                              ; Output debugging code on each request
status            = development                                    ; This sets the application environment (production | development)
suppressUndefined = 0                                              ; This turns undefined variable suppression on and off
templateExtension = hgt                                            ; This defines the template extension

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Path Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Paths]
staticPath        = ${DOCUMENT_ROOT}/                  ; This is the static file path
templatePath      = ${DOCUMENT_ROOT}/../private/views  ; This is the directory where the templates are located
geoIpCityDatabase = ${DOCUMENT_ROOT}/../private/maxmind/GeoLiteCity.dat
; geoIpCityDatabase = /home/tbrown/Downloads/maxmind/GeoLiteCity.dat
geoIpIspDatabase  = ${DOCUMENT_ROOT}/../private/maxmind/GeoIPASNum.dat
; geoIpIspDatabase  = /home/tbrown/Downloads/maxmind/GeoIPASNum.dat

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Template Settings ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[Templates]
notFound          = error/404                                      ; This is the template for 404 errors
serverFault       = error/500                                      ; This is the template for 500 errors

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; ISPConfig 3 Integration ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[ispConfig]
endPoint          = https://panel.cdndepo.com/remote/json.php ; This is the URL to the JSON implementation of the API (https://bitbucket.org/bolvarak/ispconfig-json-wrapper
userName          = cdndepo                                   ; This is the remote username you wish to query the API with
passWord          = Fj8*Qm1597tmb!!!#                         ; This is the password for the remote username

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; SQL Queries ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[sqlQueries]
createPendingRequest     = INSERT INTO "PendingRequests" ("UUID", "Created") VALUES (uuid_in(md5(now()::text)::cstring), current_timestamp) RETURNING "ID", "UUID", "Response", "Active", "Created";
deactivatePendingRequest = UPDATE "Pendingrequests" SET "Active"   = false WHERE "UUID" = '%1';
updatePendingRequest     = UPDATE "PendingRequests" SET "Response" = %1 WHERE "UUID" = '%2';
